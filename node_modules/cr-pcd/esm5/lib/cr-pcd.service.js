/**
 * @fileoverview added by tsickle
 * Generated from: lib/cr-pcd.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { provinces, cantons, districts } from './data';
import * as i0 from "@angular/core";
var CrPcdService = /** @class */ (function () {
    function CrPcdService() {
    }
    /**
     * @return {?}
     */
    CrPcdService.prototype.getProvinces = /**
     * @return {?}
     */
    function () {
        return provinces;
    };
    /**
     * @param {?} provinceId
     * @return {?}
     */
    CrPcdService.prototype.getCantons = /**
     * @param {?} provinceId
     * @return {?}
     */
    function (provinceId) {
        return cantons[provinceId];
    };
    /**
     * @param {?} cantonId
     * @return {?}
     */
    CrPcdService.prototype.getDistricts = /**
     * @param {?} cantonId
     * @return {?}
     */
    function (cantonId) {
        return districts[cantonId];
    };
    CrPcdService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    CrPcdService.ctorParameters = function () { return []; };
    /** @nocollapse */ CrPcdService.ngInjectableDef = i0.defineInjectable({ factory: function CrPcdService_Factory() { return new CrPcdService(); }, token: CrPcdService, providedIn: "root" });
    return CrPcdService;
}());
export { CrPcdService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3ItcGNkLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jci1wY2QvIiwic291cmNlcyI6WyJsaWIvY3ItcGNkLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLFFBQVEsQ0FBQzs7QUFFdkQ7SUFLRTtJQUFnQixDQUFDOzs7O0lBRWpCLG1DQUFZOzs7SUFBWjtRQUNFLE9BQU8sU0FBUyxDQUFDO0lBQ25CLENBQUM7Ozs7O0lBRUQsaUNBQVU7Ozs7SUFBVixVQUFXLFVBQWtCO1FBQzNCLE9BQU8sT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzdCLENBQUM7Ozs7O0lBRUQsbUNBQVk7Ozs7SUFBWixVQUFhLFFBQWdCO1FBQzNCLE9BQU8sU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzdCLENBQUM7O2dCQWpCRixVQUFVLFNBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25COzs7Ozt1QkFMRDtDQXFCQyxBQWxCRCxJQWtCQztTQWZZLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBwcm92aW5jZXMsIGNhbnRvbnMsIGRpc3RyaWN0cyB9IGZyb20gJy4vZGF0YSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIENyUGNkU2VydmljZSB7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBnZXRQcm92aW5jZXMoKSB7XG4gICAgcmV0dXJuIHByb3ZpbmNlcztcbiAgfVxuXG4gIGdldENhbnRvbnMocHJvdmluY2VJZDogc3RyaW5nKSB7XG4gICAgcmV0dXJuIGNhbnRvbnNbcHJvdmluY2VJZF07XG4gIH1cblxuICBnZXREaXN0cmljdHMoY2FudG9uSWQ6IHN0cmluZykge1xuICAgIHJldHVybiBkaXN0cmljdHNbY2FudG9uSWRdO1xuICB9XG59XG4iXX0=